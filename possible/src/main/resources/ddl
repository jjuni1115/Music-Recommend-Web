SQL Table DDL Script

CREATE TABLE if NOT exists USER(
ID INT PRIMARY KEY Auto_Increment,
ACCOUNT VARCHAR(20) UNIQUE,
PASSWORD VARCHAR(20) NOT NULL,
first_name VARCHAR(20) NOT NULL,
last_name VARCHAR(20) NOT NULL,
age INT CHECK(age > 0),
class_ VARCHAR(20) NOT NULL,
money INT,
sex BOOLEAN);

CREATE TABLE if NOT exists music(
ID INT PRIMARY KEY Auto_Increment,
title VARCHAR(100) NOT null,
artist VARCHAR(100) NOT null,
genre VARCHAR(20),
release_time DATE DEFAULT '2000-01-01',
adult_authen TINYINT(1) NOT null DEFAULT 0,
videoid VARCHAR(30)
);

CREATE TABLE if NOT exists music_detail(
ID INT PRIMARY KEY AUTO_INCREMENT,
lyrics JSON
);

CREATE TABLE if NOT exists playlist(
ID INT PRIMARY KEY Auto_Increment,
list_name VARCHAR(50) NOT null,
release_time DATE DEFAULT '2000-01-01',
user_ID INT NOT NULL,
FOREIGN KEY(user_ID) REFERENCES user(ID)
);

CREATE TABLE if NOT exists rel(
playlist_ID int,
music_ID int,
FOREIGN KEY(playlist_ID) REFERENCES playlist(ID) ON DELETE CASCADE ON UPDATE cascade,
FOREIGN KEY(music_ID) REFERENCES music(ID) ON DELETE CASCADE ON UPDATE cascade,
PRIMARY KEY(playlist_ID, music_ID)
);

CREATE TABLE if NOT EXISTS share_list(
playlist_ID INT,
user_ID INT,
first_name VARCHAR(20) COLLATE utf8_general_ci,
last_name VARCHAR(20) COLLATE utf8_general_ci,
list_name VARCHAR(50) COLLATE utf8_general_ci,
release_time DATE DEFAULT '2000-01-01',
is_share TINYINT(1) not null DEFAULT '0',
FOREIGN KEY(playlist_ID) REFERENCES playlist(ID) ON DELETE CASCADE ON UPDATE cascade,
FOREIGN KEY(user_ID) REFERENCES user(ID) ON DELETE CASCADE ON UPDATE cascade,
PRIMARY KEY(playlist_ID, user_ID)
);




// ALTER TABLE `playlist`
  	ADD COLUMN `is_share` TINYINT(1) NOT NULL DEFAULT '0' AFTER `user_ID`;


  // ALTER TABLE `playlist`
     	DROP COLUMN `is_share`;